// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240327171432_initial migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApplication1.Models.Course", b =>
                {
                    b.Property<int>("courseid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("coursename")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("instructorid")
                        .HasColumnType("int");

                    b.HasKey("courseid");

                    b.HasIndex("coursename")
                        .IsUnique();

                    b.HasIndex("instructorid");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("WebApplication1.Models.CoursesUsers", b =>
                {
                    b.Property<int>("courseid")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("courseid", "userid");

                    b.HasIndex("userid");

                    b.ToTable("CoursesUsers");
                });

            modelBuilder.Entity("WebApplication1.Models.Tasks", b =>
                {
                    b.Property<int>("taskid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("courseid")
                        .HasColumnType("int");

                    b.Property<DateTime>("duedate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("taskdescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("taskname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("taskid");

                    b.HasIndex("courseid");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("WebApplication1.Models.TrackingTask", b =>
                {
                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.Property<int>("taskid")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userid", "taskid");

                    b.HasIndex("taskid");

                    b.ToTable("TrackingTask");
                });

            modelBuilder.Entity("WebApplication1.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("priviledge")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userid");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplication1.Models.Course", b =>
                {
                    b.HasOne("WebApplication1.Models.User", "Instructor")
                        .WithMany("course")
                        .HasForeignKey("instructorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("WebApplication1.Models.CoursesUsers", b =>
                {
                    b.HasOne("WebApplication1.Models.Course", "Course")
                        .WithMany("CoursesUsers")
                        .HasForeignKey("courseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.User", "User")
                        .WithMany("CoursesUsers")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.Models.Tasks", b =>
                {
                    b.HasOne("WebApplication1.Models.Course", "course")
                        .WithMany("task")
                        .HasForeignKey("courseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");
                });

            modelBuilder.Entity("WebApplication1.Models.TrackingTask", b =>
                {
                    b.HasOne("WebApplication1.Models.Tasks", "Task")
                        .WithMany("TrackingTask")
                        .HasForeignKey("taskid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.User", "User")
                        .WithMany("TrackingTask")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.Models.Course", b =>
                {
                    b.Navigation("CoursesUsers");

                    b.Navigation("task");
                });

            modelBuilder.Entity("WebApplication1.Models.Tasks", b =>
                {
                    b.Navigation("TrackingTask");
                });

            modelBuilder.Entity("WebApplication1.Models.User", b =>
                {
                    b.Navigation("CoursesUsers");

                    b.Navigation("TrackingTask");

                    b.Navigation("course");
                });
#pragma warning restore 612, 618
        }
    }
}
